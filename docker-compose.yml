version: '2.4'

x-web-defaults:
  &web-defaults
  restart: unless-stopped
  build:
    context: web
    dockerfile: "Dockerfile${DOCKERFILE_VERSION-}"
  volumes:
    - ./web:/app
  depends_on:
    - redis
  environment:
    EMAIL_HOST: "smtp.gmail.com"
    EMAIL_HOST_USER: "jreed1701@gmail.com"
    EMAIL_HOST_PASSWORD: "ftjlldwnngtelrxi"
    EMAIL_PORT: 587
    EMAIL_USE_TLS: 'True'
    DEFAULT_FROM_EMAIL: 'tsd@local'
    DEBUG: 'False' # Don't set DEBUG to True, otherwise the static files will be cached in browser until hard-refresh
    SITE_USES_HTTPS: 'False' # set it to 'True' if https is set up
    SITE_IS_PUBLIC: 'False' # set it to 'True' if the site configured in django admin is accessible from the internet
    SOCIAL_LOGIN: 'False'
    REDIS_URL: 'redis://redis:6379'
    DATABASE_URL: 'sqlite:////app/db.sqlite3'
    INTERNAL_MEDIA_HOST: 'http://web:3334'
    ML_API_HOST: 'http://ml_api:3333'
    ACCOUNT_ALLOW_SIGN_UP: 'False' # -> set to 'True' if you want to open sign up form
    WEBPACK_LOADER_ENABLED:
    OCTOPRINT_TUNNEL_PORT_RANGE: '${OCTOPRINT_TUNNEL_PORT_RANGE-15853-15873}'
    #### Optional env vars below this line ###
    #TWILIO_ACCOUNT_SID: https://django-twilio.readthedocs.io/en/latest/settings.html for how to find and set the TWILIO_XXX vars
    #TWILIO_AUTH_TOKEN:
    #TWILIO_FROM_NUMBER:
    #ML_API_TOKEN:
    #SENTRY_DSN:
    #TELEGRAM_BOT_TOKEN: https://core.telegram.org/bots#6-botfather for how to create a telegram bot and get its token
    #PUSHOVER_APP_TOKEN: https://pushover.net/api#registration for how to register an app api token

services:
  ml_api:
    hostname: ml_api
    restart: unless-stopped
    build:
      context: ml_api
    environment:
      DEBUG: 'True'
      FLASK_APP: 'server.py'
      #ML_API_TOKEN:
      #HAS_GPU: 'False'
    command: bash -c "gunicorn --bind 0.0.0.0:3333 --workers 1 wsgi"

  web:
    <<: *web-defaults
    hostname: web
    ports:
      - "3000:3334"
      - "${OCTOPRINT_TUNNEL_PORT_RANGE-15853-15873}:3334"
    depends_on:
      - ml_api
    command: sh -c "python manage.py collectstatic -v 2 --noinput && python manage.py migrate && python manage.py runserver --nostatic 0.0.0.0:3334"

  tasks:
    <<: *web-defaults
    hostname: tasks
    command: sh -c "celery -A config worker --beat -l info -c 2 -Q realtime,celery"

  redis:
    restart: unless-stopped
    image: redis:5.0-alpine

  # octoprint:
  #   image: octoprint/octoprint
  #   restart: unless-stopped
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - octoprint:/octoprint

volumes:
  octoprint:

networks: 
  default: 
    external: 
      name: tsd_overlay