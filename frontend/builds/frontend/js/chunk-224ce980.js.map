{"version":3,"sources":["webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?2e05","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue","webpack:///src/components/user-preferences/notifications/NotificationSettingSwitch.vue","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?789d","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?7a92","webpack:///./src/config/user-preferences/notification-settings.js","webpack:///src/components/user-preferences/notifications/NotificationChannelTemplate.vue","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?69a0","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?9958","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?703a","webpack:///./src/notifications/plugins/TwilioPlugin.vue","webpack:///src/notifications/plugins/TwilioPlugin.vue","webpack:///./src/notifications/plugins/TwilioPlugin.vue?bff7","webpack:///./src/notifications/plugins/TwilioPlugin.vue?5af9"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","notificationChannel","title","envVarsToSet","length","_t","configVariableName","attrs","settingKey","configVariableTitle","errorMessages","saving","directives","name","rawName","value","configVariable","expression","configVariablePlaceholder","domProps","on","$event","target","composing","_e","channelCreated","showSettings","$emit","class","inactive","notificationsEnabled","_l","notificationSettings","setting","key","id","theme","printerStatusChangeNotifications","Array","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","description","model","callback","subcategories","subcategory","getKey","variable","staticRenderFns","isSubcategory","settingId","disabled","labelClass","settingTitle","settingDescription","bottomDivider","components","SavingAnimation","props","type","default","required","isHeader","data","computed","watch","section","propNames","propValues","methods","component","enabledByDefault","NotificationSettingSwitch","configUpdateTimeout","missedEnvVars","get","set","changedProps","newValues","created","updateConfig","clearTimeout","config","channel","scopedSlots","_u","fn","phoneCountryCode","phoneNumber","proxy","NotificationChannelTemplate","user","phone_country_code","phone_number","opts","notify_on_print_done","notify_on_print_cancelled","notify_on_filament_change","notify_on_other_print_events","notify_on_heater_status"],"mappings":"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","file":"js/chunk-224ce980.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=style&index=0&id=76646857&prod&lang=sass&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('h2',{staticClass:\"section-title\"},[_vm._v(_vm._s(_vm.notificationChannel.title))]),(_vm.envVarsToSet.length === 0)?_c('div',[_vm._t(\"header\"),_vm._t(\"configuration\",function(){return [(_vm.configVariableName)?_c('div',{staticClass:\"form-group row my-4\"},[_c('label',{staticClass:\"col-12 col-form-label\",attrs:{\"for\":`id_${_vm.settingKey(_vm.configVariableName)}`}},[_vm._v(\" \"+_vm._s(_vm.configVariableTitle)+\" \")]),_c('div',{staticClass:\"col-12 col-form-label\"},[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages[_vm.settingKey('config')],\"saving\":_vm.saving[_vm.settingKey('config')]}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.configVariable),expression:\"configVariable\"}],staticClass:\"form-control\",attrs:{\"id\":`id_${_vm.settingKey(_vm.configVariableName)}`,\"type\":\"text\",\"placeholder\":_vm.configVariablePlaceholder},domProps:{\"value\":(_vm.configVariable)},on:{\"input\":function($event){if($event.target.composing)return;_vm.configVariable=$event.target.value}}})])],1)]):_vm._e()]}),(_vm.channelCreated && _vm.showSettings)?_c('div',[_c('notification-setting-switch',{attrs:{\"setting-id\":\"enabled\",\"setting-title\":\"Enable notification\",\"is-header\":true,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel,\"bottom-divider\":true},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}}),_c('div',{class:{ inactive: !_vm.notificationsEnabled }},[_vm._t(\"custom-settings\"),_vm._l((_vm.notificationSettings),function(setting){return _c('div',{key:setting.id},[(setting.id === 'print_job')?[(_vm.theme === 'web')?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-form-label\"},[_c('saving-animation',{attrs:{\"errors\":[],\"saving\":false}},[_c('div',{staticClass:\"custom-control custom-checkbox form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.printerStatusChangeNotifications),expression:\"printerStatusChangeNotifications\"}],staticClass:\"custom-control-input\",attrs:{\"id\":`id_${_vm.settingKey(setting.id)}`,\"type\":\"checkbox\",\"disabled\":!_vm.notificationsEnabled},domProps:{\"checked\":Array.isArray(_vm.printerStatusChangeNotifications)?_vm._i(_vm.printerStatusChangeNotifications,null)>-1:(_vm.printerStatusChangeNotifications)},on:{\"change\":function($event){var $$a=_vm.printerStatusChangeNotifications,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.printerStatusChangeNotifications=$$a.concat([$$v]))}else{$$i>-1&&(_vm.printerStatusChangeNotifications=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.printerStatusChangeNotifications=$$c}}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":`id_${_vm.settingKey(setting.id)}`}},[_vm._v(\" \"+_vm._s(setting.title)+\" \"),(setting.description)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(setting.description))]):_vm._e()])])])],1)]):_c('div',[_c('saving-animation',{attrs:{\"errors\":[],\"saving\":false}},[_c('div',{staticClass:\"mobile-setting-item-wrapper\"},[_c('div',{staticClass:\"setting-item-text\"},[_c('label',{attrs:{\"for\":`id_${_vm.settingKey(setting.id)}`}},[_vm._v(\" \"+_vm._s(setting.title)+\" \"),(setting.description)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(setting.description))]):_vm._e()])]),_c('div',{staticClass:\"setting-item-switch\"},[_c('onoff-toggle',{staticClass:\"mb-0\",attrs:{\"theme\":_vm.theme,\"width\":_vm.theme === 'ios' ? 48 : 30,\"height\":_vm.theme === 'ios' ? 24 : 12,\"on-color\":_vm.theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)',\"off-color\":\"var(--color-divider)\",\"border-color\":\"var(--color-divider)\",\"thumb-color\":_vm.theme === 'ios' ? '#fff' : 'var(--color-primary)',\"disabled\":!_vm.notificationsEnabled},model:{value:(_vm.printerStatusChangeNotifications),callback:function ($$v) {_vm.printerStatusChangeNotifications=$$v},expression:\"printerStatusChangeNotifications\"}})],1)])])],1)]:[_c('notification-setting-switch',{attrs:{\"setting-id\":setting.id,\"setting-title\":setting.title,\"setting-description\":setting.description,\"disabled\":!_vm.notificationsEnabled,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}})],(setting.subcategories)?_c('div',_vm._l((setting.subcategories),function(subcategory){return _c('notification-setting-switch',{key:_vm.getKey(subcategory),attrs:{\"setting-id\":subcategory.id,\"setting-title\":subcategory.title,\"setting-description\":subcategory.description,\"is-subcategory\":true,\"disabled\":!_vm.notificationsEnabled,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}})}),1):_vm._e()],2)})],2)],1):_vm._e(),_vm._t(\"footer\")],2):_c('div',[_c('p',{staticClass:\"text-warning\"},[_vm._v(\"Please configure the following variables in the \\\".env\\\" file:\")]),_c('ul',{staticClass:\"text-warning\"},_vm._l((_vm.envVarsToSet),function(variable){return _c('li',{key:variable},[_vm._v(_vm._s(variable))])}),0)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.theme === 'web')?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-form-label\",class:{ 'pl-5': _vm.isSubcategory }},[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages ? _vm.errorMessages[_vm.settingKey(_vm.settingId)] : [],\"saving\":_vm.saving ? _vm.saving[_vm.settingKey(_vm.settingId)] : false}},[_c('div',{staticClass:\"custom-control custom-checkbox form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.value),expression:\"value\"}],staticClass:\"custom-control-input\",attrs:{\"id\":`id_${_vm.settingKey(_vm.settingId)}`,\"type\":\"checkbox\",\"disabled\":_vm.disabled},domProps:{\"checked\":Array.isArray(_vm.value)?_vm._i(_vm.value,null)>-1:(_vm.value)},on:{\"change\":function($event){var $$a=_vm.value,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.value=$$a.concat([$$v]))}else{$$i>-1&&(_vm.value=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.value=$$c}}}}),_c('label',{class:['custom-control-label', _vm.labelClass],attrs:{\"for\":`id_${_vm.settingKey(_vm.settingId)}`}},[_vm._v(\" \"+_vm._s(_vm.settingTitle)+\" \"),(_vm.settingDescription)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(_vm.settingDescription))]):_vm._e()])])])],1),(_vm.bottomDivider)?_c('div',{staticClass:\"col-12\"},[_c('hr',{staticClass:\"my-1\"})]):_vm._e()]):_c('div',[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages ? _vm.errorMessages[_vm.settingKey(_vm.settingId)] : [],\"saving\":_vm.saving ? _vm.saving[_vm.settingKey(_vm.settingId)] : false}},[_c('div',{staticClass:\"mobile-setting-item-wrapper\",class:{ 'is-subcategory': _vm.isSubcategory }},[_c('div',{staticClass:\"setting-item-text\"},[_c('label',{class:_vm.labelClass,attrs:{\"for\":`id_${_vm.settingKey(_vm.settingId)}`}},[_vm._v(\" \"+_vm._s(_vm.settingTitle)+\" \"),(_vm.settingDescription)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(_vm.settingDescription))]):_vm._e()])]),_c('div',{staticClass:\"setting-item-switch\"},[_c('onoff-toggle',{staticClass:\"mb-0\",attrs:{\"theme\":_vm.theme,\"width\":_vm.theme === 'ios' ? 48 : 30,\"height\":_vm.theme === 'ios' ? 24 : 12,\"on-color\":_vm.theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)',\"off-color\":\"var(--color-divider)\",\"border-color\":\"var(--color-divider)\",\"thumb-color\":_vm.theme === 'ios' ? '#fff' : 'var(--color-primary)',\"disabled\":_vm.disabled},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-if=\"theme === 'web'\" class=\"row\">\n    <div class=\"col-12 col-form-label\" :class=\"{ 'pl-5': isSubcategory }\">\n      <saving-animation\n        :errors=\"errorMessages ? errorMessages[settingKey(settingId)] : []\"\n        :saving=\"saving ? saving[settingKey(settingId)] : false\"\n      >\n        <div class=\"custom-control custom-checkbox form-check-inline\">\n          <input\n            :id=\"`id_${settingKey(settingId)}`\"\n            v-model=\"value\"\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            :disabled=\"disabled\"\n          />\n          <label :class=\"['custom-control-label', labelClass]\" :for=\"`id_${settingKey(settingId)}`\">\n            {{ settingTitle }}\n            <span v-if=\"settingDescription\" class=\"text-muted setting-description\"\n              ><br />{{ settingDescription }}</span\n            >\n          </label>\n        </div>\n      </saving-animation>\n    </div>\n    <div v-if=\"bottomDivider\" class=\"col-12\">\n      <hr class=\"my-1\" />\n    </div>\n  </div>\n  <div v-else>\n    <saving-animation\n      :errors=\"errorMessages ? errorMessages[settingKey(settingId)] : []\"\n      :saving=\"saving ? saving[settingKey(settingId)] : false\"\n    >\n      <div class=\"mobile-setting-item-wrapper\" :class=\"{ 'is-subcategory': isSubcategory }\">\n        <div class=\"setting-item-text\">\n          <label :class=\"labelClass\" :for=\"`id_${settingKey(settingId)}`\">\n            {{ settingTitle }}\n            <span v-if=\"settingDescription\" class=\"text-muted setting-description\"\n              ><br />{{ settingDescription }}</span\n            >\n          </label>\n        </div>\n        <div class=\"setting-item-switch\">\n          <onoff-toggle\n            v-model=\"value\"\n            :theme=\"theme\"\n            :width=\"theme === 'ios' ? 48 : 30\"\n            :height=\"theme === 'ios' ? 24 : 12\"\n            :on-color=\"theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)'\"\n            off-color=\"var(--color-divider)\"\n            border-color=\"var(--color-divider)\"\n            :thumb-color=\"theme === 'ios' ? '#fff' : 'var(--color-primary)'\"\n            :disabled=\"disabled\"\n            class=\"mb-0\"\n          />\n        </div>\n      </div>\n    </saving-animation>\n  </div>\n</template>\n\n<script>\nimport SavingAnimation from '@src/components/SavingAnimation.vue'\nimport { getNotificationSettingKey } from '@src/lib/utils'\nimport { mobilePlatform } from '@src/lib/page_context'\n\nexport default {\n  name: 'NotificationSettingSwitch',\n\n  components: {\n    SavingAnimation,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object || null,\n      default: null,\n    },\n    saving: {\n      type: Object || null,\n      default: null,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n    settingId: {\n      type: String,\n      required: true,\n    },\n    settingTitle: {\n      type: String,\n      required: true,\n    },\n    settingDescription: {\n      type: String,\n      default: '',\n    },\n    isSubcategory: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    bottomDivider: {\n      type: Boolean,\n      default: false,\n    },\n    isHeader: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      value: this.notificationChannel.channelInfo[this.settingId],\n    }\n  },\n\n  computed: {\n    theme() {\n      const platform = mobilePlatform()\n      if (!platform) {\n        return 'web'\n      } else {\n        return platform === 'ios' ? 'ios' : 'material'\n      }\n    },\n    labelClass() {\n      return this.isHeader ? 'lg' : ''\n    },\n  },\n\n  watch: {\n    value: function (newVal, prevVal) {\n      this.$emit('updateNotificationChannel', {\n        section: this.notificationChannel,\n        propNames: [this.settingId],\n        propValues: [newVal],\n      })\n    },\n  },\n\n  methods: {\n    settingKey(settingId) {\n      return getNotificationSettingKey(this.notificationChannel, settingId)\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n.form-check-inline\n  label\n    &.lg\n      font-size: 1.15em\n      font-weight: bolder\n.mobile-setting-item-wrapper\n  display: flex\n  align-items: center\n  gap: .5rem\n  padding: 10px 0\n  border-bottom: 1px solid var(--color-divider)\n  &.is-subcategory\n    margin-left: 1rem\n  .setting-item-text\n    flex: 1\n  .setting-item-switch\n    flex: 0 0 1\n  label\n    margin-bottom: 0\n    &.lg\n      font-size: 1.15em\n      font-weight: bolder\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationSettingSwitch.vue?vue&type=template&id=f5a0e1a8&scoped=true&\"\nimport script from \"./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NotificationSettingSwitch.vue?vue&type=style&index=0&id=f5a0e1a8&prod&lang=sass&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f5a0e1a8\",\n  null\n  \n)\n\nexport default component.exports","export default [\n  {\n    id: 'notify_on_failure_alert',\n    title: 'Failure alerts',\n    description: 'When possible failures are detected',\n  },\n  {\n    id: 'print_job',\n    title: 'Print job events',\n    description: 'Upon start/end/cancellation of a print job',\n    subcategories: [\n      {\n        id: 'notify_on_print_done',\n        title: 'When print is done',\n        enabledByDefault: true,\n      },\n      {\n        id: 'notify_on_print_cancelled',\n        title: 'When print is cancelled',\n        enabledByDefault: false,\n      },\n      {\n        id: 'notify_on_filament_change',\n        title: 'When filament runs out or needs a change',\n        enabledByDefault: true,\n      },\n      {\n        id: 'notify_on_other_print_events',\n        title: 'When other event happens',\n        description: 'Such as start, pause, and resume',\n        enabledByDefault: false,\n      },\n    ],\n  },\n  {\n    id: 'notify_on_heater_status',\n    title: 'Heater status change',\n    description: 'Heater reached target or cooled down',\n  },\n]\n","<template>\n  <section>\n    <h2 class=\"section-title\">{{ notificationChannel.title }}</h2>\n\n    <div v-if=\"envVarsToSet.length === 0\">\n      <slot name=\"header\"></slot>\n\n      <slot name=\"configuration\">\n        <div v-if=\"configVariableName\" class=\"form-group row my-4\">\n          <label :for=\"`id_${settingKey(configVariableName)}`\" class=\"col-12 col-form-label\">\n            {{ configVariableTitle }}\n          </label>\n          <div class=\"col-12 col-form-label\">\n            <saving-animation\n              :errors=\"errorMessages[settingKey('config')]\"\n              :saving=\"saving[settingKey('config')]\"\n            >\n              <input\n                :id=\"`id_${settingKey(configVariableName)}`\"\n                v-model=\"configVariable\"\n                type=\"text\"\n                :placeholder=\"configVariablePlaceholder\"\n                class=\"form-control\"\n              />\n            </saving-animation>\n          </div>\n        </div>\n      </slot>\n\n      <div v-if=\"channelCreated && showSettings\">\n        <notification-setting-switch\n          setting-id=\"enabled\"\n          setting-title=\"Enable notification\"\n          :is-header=\"true\"\n          :error-messages=\"errorMessages\"\n          :saving=\"saving\"\n          :notification-channel=\"notificationChannel\"\n          :bottom-divider=\"true\"\n          @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n        />\n        <div :class=\"{ inactive: !notificationsEnabled }\">\n          <slot name=\"custom-settings\"></slot>\n          <div v-for=\"setting in notificationSettings\" :key=\"setting.id\">\n            <template v-if=\"setting.id === 'print_job'\">\n              <!-- FIXME: reuse NotificationSettingSwitch -->\n              <div v-if=\"theme === 'web'\" class=\"row\">\n                <div class=\"col-12 col-form-label\">\n                  <saving-animation :errors=\"[]\" :saving=\"false\">\n                    <div class=\"custom-control custom-checkbox form-check-inline\">\n                      <input\n                        :id=\"`id_${settingKey(setting.id)}`\"\n                        v-model=\"printerStatusChangeNotifications\"\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        :disabled=\"!notificationsEnabled\"\n                      />\n                      <label class=\"custom-control-label\" :for=\"`id_${settingKey(setting.id)}`\">\n                        {{ setting.title }}\n                        <span v-if=\"setting.description\" class=\"text-muted setting-description\"\n                          ><br />{{ setting.description }}</span\n                        >\n                      </label>\n                    </div>\n                  </saving-animation>\n                </div>\n              </div>\n              <div v-else>\n                <saving-animation :errors=\"[]\" :saving=\"false\">\n                  <div class=\"mobile-setting-item-wrapper\">\n                    <div class=\"setting-item-text\">\n                      <label :for=\"`id_${settingKey(setting.id)}`\">\n                        {{ setting.title }}\n                        <span v-if=\"setting.description\" class=\"text-muted setting-description\"\n                          ><br />{{ setting.description }}</span\n                        >\n                      </label>\n                    </div>\n                    <div class=\"setting-item-switch\">\n                      <onoff-toggle\n                        v-model=\"printerStatusChangeNotifications\"\n                        :theme=\"theme\"\n                        :width=\"theme === 'ios' ? 48 : 30\"\n                        :height=\"theme === 'ios' ? 24 : 12\"\n                        :on-color=\"\n                          theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)'\n                        \"\n                        off-color=\"var(--color-divider)\"\n                        border-color=\"var(--color-divider)\"\n                        :thumb-color=\"theme === 'ios' ? '#fff' : 'var(--color-primary)'\"\n                        :disabled=\"!notificationsEnabled\"\n                        class=\"mb-0\"\n                      />\n                    </div>\n                  </div>\n                </saving-animation>\n              </div>\n            </template>\n            <template v-else>\n              <notification-setting-switch\n                :setting-id=\"setting.id\"\n                :setting-title=\"setting.title\"\n                :setting-description=\"setting.description\"\n                :disabled=\"!notificationsEnabled\"\n                :error-messages=\"errorMessages\"\n                :saving=\"saving\"\n                :notification-channel=\"notificationChannel\"\n                @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n              />\n            </template>\n            <div v-if=\"setting.subcategories\">\n              <notification-setting-switch\n                v-for=\"subcategory in setting.subcategories\"\n                :key=\"getKey(subcategory)\"\n                :setting-id=\"subcategory.id\"\n                :setting-title=\"subcategory.title\"\n                :setting-description=\"subcategory.description\"\n                :is-subcategory=\"true\"\n                :disabled=\"!notificationsEnabled\"\n                :error-messages=\"errorMessages\"\n                :saving=\"saving\"\n                :notification-channel=\"notificationChannel\"\n                @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <slot name=\"footer\"></slot>\n    </div>\n    <div v-else>\n      <p class=\"text-warning\">Please configure the following variables in the \".env\" file:</p>\n      <ul class=\"text-warning\">\n        <li v-for=\"variable in envVarsToSet\" :key=\"variable\">{{ variable }}</li>\n      </ul>\n    </div>\n  </section>\n</template>\n\n<script>\nimport SavingAnimation from '@src/components/SavingAnimation.vue'\nimport NotificationSettingSwitch from '@src/components/user-preferences/notifications/NotificationSettingSwitch.vue'\nimport { getNotificationSettingKey } from '@src/lib/utils'\nimport defaultNotificationSettings from '@config/user-preferences/notification-settings'\nimport { mobilePlatform } from '@src/lib/page_context'\n\nexport default {\n  name: 'NotificationChannelTemplate',\n\n  components: {\n    SavingAnimation,\n    NotificationSettingSwitch,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object,\n      required: true,\n    },\n    saving: {\n      type: Object,\n      required: true,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n    notificationSettings: {\n      type: Array,\n      default: () => defaultNotificationSettings,\n    },\n    showSettings: {\n      type: Boolean,\n      default: true,\n    },\n    configVariableTitle: {\n      type: String,\n      default: '',\n    },\n    configVariablePlaceholder: {\n      type: String,\n      default: '',\n    },\n    configVariableName: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      configVariable: null,\n      configUpdateTimeout: null,\n    }\n  },\n\n  computed: {\n    channelCreated() {\n      return !!this.notificationChannel.channelInfo\n    },\n    notificationsEnabled() {\n      return this.notificationChannel.channelInfo\n        ? this.notificationChannel.channelInfo.enabled\n        : false\n    },\n    envVarsToSet() {\n      const envVars = this.notificationChannel.pluginInfo?.env_vars || {}\n      let missedEnvVars = []\n      for (const [key, val] of Object.entries(envVars)) {\n        if (val.is_required && !val.is_set) {\n          missedEnvVars.push(key)\n        }\n      }\n      return missedEnvVars\n    },\n    printerStatusChangeNotifications: {\n      get: function () {\n        if (!this.notificationChannel.channelInfo) {\n          return null\n        }\n        const subcategories = this.notificationSettings.find(\n          (setting) => setting.id === 'print_job'\n        ).subcategories\n        for (const subcategory of subcategories) {\n          if (this.notificationChannel.channelInfo[subcategory.id]) {\n            return true\n          }\n        }\n        return false\n      },\n      set: function (newValue) {\n        if (newValue) {\n          const subcategories = this.notificationSettings.find(\n            (setting) => setting.id === 'print_job'\n          ).subcategories\n          let changedProps = []\n          let newValues = []\n          for (const subcategory of subcategories) {\n            if (subcategory.enabledByDefault) {\n              // this.notificationChannel.channelInfo[subcategory.id] = true\n              changedProps.push(subcategory.id)\n              newValues.push(true)\n            }\n          }\n          if (changedProps.length) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: changedProps,\n              propValues: newValues,\n            })\n          }\n        } else {\n          const subcategories = this.notificationSettings.find(\n            (setting) => setting.id === 'print_job'\n          ).subcategories\n          let changedProps = []\n          let newValues = []\n          for (const subcategory of subcategories) {\n            if (this.notificationChannel.channelInfo[subcategory.id]) {\n              // this.notificationChannel.channelInfo[subcategory.id] = false\n              changedProps.push(subcategory.id)\n              newValues.push(false)\n            }\n          }\n          if (changedProps.length) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: changedProps,\n              propValues: newValues,\n            })\n          }\n        }\n      },\n    },\n    // FIXME: remove after NotificationSettingSwitch reuse\n    theme() {\n      const platform = mobilePlatform()\n      if (!platform) {\n        return 'web'\n      } else {\n        return platform === 'ios' ? 'ios' : 'material'\n      }\n    },\n  },\n\n  watch: {\n    configVariable(newValue, oldValue) {\n      if (oldValue === null) {\n        return\n      }\n      this.$emit('clearErrorMessages', this.settingKey('config'))\n      this.updateConfig()\n    },\n  },\n\n  created() {\n    if (\n      this.notificationChannel.channelInfo &&\n      this.notificationChannel.channelInfo.config &&\n      this.configVariableName\n    ) {\n      this.configVariable = this.notificationChannel.channelInfo.config[this.configVariableName]\n    } else {\n      this.configVariable = ''\n    }\n  },\n\n  methods: {\n    getKey(setting) {\n      // update key on setting value change to force re-render\n      return `${setting.id}_${this.notificationChannel.channelInfo[setting.id]}`\n    },\n    settingKey(settingId) {\n      return getNotificationSettingKey(this.notificationChannel, settingId)\n    },\n    updateConfig() {\n      if (this.configUpdateTimeout) {\n        clearTimeout(this.configUpdateTimeout)\n      }\n\n      const config = {\n        [this.configVariableName]: this.configVariable,\n      }\n\n      if (this.channelCreated) {\n        this.configUpdateTimeout = setTimeout(() => {\n          if (this.configVariable) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: ['config'],\n              propValues: [config],\n            })\n          } else {\n            this.$emit('deleteNotificationChannel', this.notificationChannel)\n          }\n        }, 1000)\n      } else if (this.configVariable) {\n        this.configUpdateTimeout = setTimeout(\n          () =>\n            this.$emit('createNotificationChannel', { section: this.notificationChannel, config }),\n          1000\n        )\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n\n// FIXME: remove after NotificationSettingSwitch reuse\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n.mobile-setting-item-wrapper\n  display: flex\n  align-items: center\n  gap: .5rem\n  padding: 10px 0\n  border-bottom: 1px solid var(--color-divider)\n  &.is-subcategory\n    margin-left: 1rem\n  .setting-item-text\n    flex: 1\n  .setting-item-switch\n    flex: 0 0 1\n  label\n    margin-bottom: 0\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationChannelTemplate.vue?vue&type=template&id=76646857&scoped=true&\"\nimport script from \"./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NotificationChannelTemplate.vue?vue&type=style&index=0&id=76646857&prod&lang=sass&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76646857\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=style&index=0&id=f5a0e1a8&prod&lang=sass&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('notification-channel-template',{attrs:{\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel,\"notification-settings\":_vm.notificationSettings},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)},\"deleteNotificationChannel\":(channel) => _vm.$emit('deleteNotificationChannel', channel),\"clearErrorMessages\":(settingKey) => _vm.$emit('clearErrorMessages', settingKey)},scopedSlots:_vm._u([{key:\"configuration\",fn:function(){return [_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-12 col-form-label\",attrs:{\"for\":\"id_email\"}},[_vm._v(\"Phone Number\")]),_c('div',{staticClass:\"col-12 col-form-label\"},[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages[_vm.settingKey('config')],\"saving\":_vm.saving[_vm.settingKey('config')]}},[_c('div',{staticClass:\"form-group form-row\"},[_c('div',{staticClass:\"col-sm-6 col-md-4 mb-2 mb-sm-0\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phoneCountryCode),expression:\"phoneCountryCode\"}],staticClass:\"form-control\",attrs:{\"id\":\"id_phone_code\",\"type\":\"text\",\"placeholder\":\"Country Code\"},domProps:{\"value\":(_vm.phoneCountryCode)},on:{\"input\":function($event){if($event.target.composing)return;_vm.phoneCountryCode=$event.target.value}}})]),_c('div',{staticClass:\"col-sm-6 col-md-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phoneNumber),expression:\"phoneNumber\"}],staticClass:\"form-control\",attrs:{\"id\":\"id_phone_number\",\"type\":\"text\",\"placeholder\":\"Phone Number\"},domProps:{\"value\":(_vm.phoneNumber)},on:{\"input\":function($event){if($event.target.composing)return;_vm.phoneNumber=$event.target.value}}})])])])],1)])]},proxy:true}])})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <notification-channel-template\n    :error-messages=\"errorMessages\"\n    :saving=\"saving\"\n    :notification-channel=\"notificationChannel\"\n    :notification-settings=\"notificationSettings\"\n    @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n    @deleteNotificationChannel=\"(channel) => $emit('deleteNotificationChannel', channel)\"\n    @clearErrorMessages=\"(settingKey) => $emit('clearErrorMessages', settingKey)\"\n  >\n    <template #configuration>\n      <div class=\"form-group row\">\n        <label for=\"id_email\" class=\"col-12 col-form-label\">Phone Number</label>\n        <div class=\"col-12 col-form-label\">\n          <saving-animation\n            :errors=\"errorMessages[settingKey('config')]\"\n            :saving=\"saving[settingKey('config')]\"\n          >\n            <div class=\"form-group form-row\">\n              <div class=\"col-sm-6 col-md-4 mb-2 mb-sm-0\">\n                <input\n                  id=\"id_phone_code\"\n                  v-model=\"phoneCountryCode\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Country Code\"\n                />\n              </div>\n              <div class=\"col-sm-6 col-md-8\">\n                <input\n                  id=\"id_phone_number\"\n                  v-model=\"phoneNumber\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Phone Number\"\n                />\n              </div>\n            </div>\n          </saving-animation>\n        </div>\n      </div>\n    </template>\n  </notification-channel-template>\n</template>\n\n<script>\nimport SavingAnimation from '@src/components/SavingAnimation.vue'\nimport NotificationChannelTemplate from '@src/components/user-preferences/notifications/NotificationChannelTemplate.vue'\nimport { getNotificationSettingKey } from '@src/lib/utils'\n\nexport default {\n  name: 'TwilioPlugin',\n\n  components: {\n    SavingAnimation,\n    NotificationChannelTemplate,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object,\n      required: true,\n    },\n    saving: {\n      type: Object,\n      required: true,\n    },\n    user: {\n      type: Object,\n      required: true,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n    config: {\n      default() {\n        return {}\n      },\n      type: Object,\n    },\n  },\n\n  data() {\n    return {\n      notificationSettings: [\n        {\n          id: 'notify_on_failure_alert',\n          title: 'Failure alerts',\n          description: 'When possible failures are detected',\n        },\n      ],\n      configUpdateTimeout: null,\n      phoneCountryCode: null,\n      phoneNumber: null,\n    }\n  },\n\n  watch: {\n    phoneCountryCode(newValue, oldValue) {\n      if (oldValue === null) {\n        return\n      }\n\n      this.$emit('clearErrorMessages', this.settingKey('config'))\n\n      // Allow clear data\n      if (newValue === '') {\n        if (this.phoneNumber === '') {\n          this.updateConfig()\n        }\n        return\n      }\n\n      const codeNumber = parseInt(newValue.replace(/\\s/g, '')) // will parse both '1' / '+1', clear spaces for safety\n      if (isNaN(codeNumber)) {\n        return\n      }\n\n      if (\n        this.config.twilioCountryCodes &&\n        this.config.twilioCountryCodes.length !== 0 &&\n        !this.config.twilioCountryCodes.includes(codeNumber)\n      ) {\n        this.$emit(\n          'addErrorMessage',\n          this.settingKey('config'),\n          \"Oops, we don't send SMS to this country code\"\n        )\n      } else {\n        if (this.phoneNumber) {\n          this.updateConfig()\n        }\n      }\n    },\n    phoneNumber(newValue, oldValue) {\n      if (oldValue === null) {\n        return\n      }\n\n      this.$emit('clearErrorMessages', this.settingKey('config'))\n\n      // Allow clear data\n      if (newValue === '') {\n        if (this.phoneCountryCode === '') {\n          this.updateConfig()\n        }\n        return\n      }\n\n      if (this.phoneCountryCode) {\n        this.updateConfig()\n      }\n    },\n  },\n\n  created() {\n    if (this.notificationChannel.channelInfo && this.notificationChannel.channelInfo.config) {\n      this.phoneCountryCode = this.notificationChannel.channelInfo.config.phone_country_code\n      this.phoneNumber = this.notificationChannel.channelInfo.config.phone_number\n    }\n  },\n\n  methods: {\n    settingKey(settingId) {\n      return getNotificationSettingKey(this.notificationChannel, settingId)\n    },\n    updateConfig() {\n      if (this.configUpdateTimeout) {\n        clearTimeout(this.configUpdateTimeout)\n      }\n\n      const config = {\n        phone_country_code: this.phoneCountryCode,\n        phone_number: this.phoneNumber,\n      }\n\n      if (this.notificationChannel.channelInfo) {\n        this.configUpdateTimeout = setTimeout(() => {\n          this.$emit('updateNotificationChannel', {\n            section: this.notificationChannel,\n            propNames: ['config'],\n            propValues: [config],\n          })\n        }, 1000)\n      } else {\n        this.configUpdateTimeout = setTimeout(() => {\n          this.$emit('createNotificationChannel', {\n            section: this.notificationChannel,\n            config,\n            opts: {\n              notify_on_print_done: 'f',\n              notify_on_print_cancelled: 'f',\n              notify_on_filament_change: 'f',\n              notify_on_other_print_events: 'f',\n              notify_on_heater_status: 'f',\n            },\n          })\n        }, 1000)\n      }\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TwilioPlugin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TwilioPlugin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TwilioPlugin.vue?vue&type=template&id=3ce8c82a&\"\nimport script from \"./TwilioPlugin.vue?vue&type=script&lang=js&\"\nexport * from \"./TwilioPlugin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}