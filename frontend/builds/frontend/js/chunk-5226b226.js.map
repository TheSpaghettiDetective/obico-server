{"version":3,"sources":["webpack:///./src/notifications/plugins/PushoverPlugin.vue","webpack:///src/notifications/plugins/PushoverPlugin.vue","webpack:///./src/notifications/plugins/PushoverPlugin.vue?7999","webpack:///./src/notifications/plugins/PushoverPlugin.vue?1014","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?2e05","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue","webpack:///src/components/user-preferences/notifications/NotificationSettingSwitch.vue","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?789d","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?7a92","webpack:///./src/config/user-preferences/notification-settings.js","webpack:///src/components/user-preferences/notifications/NotificationChannelTemplate.vue","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?69a0","webpack:///./src/components/user-preferences/notifications/NotificationChannelTemplate.vue?9958","webpack:///./src/components/user-preferences/notifications/NotificationSettingSwitch.vue?703a"],"names":["render","_vm","this","_c","_self","attrs","errorMessages","saving","notificationChannel","on","$event","$emit","channel","settingKey","scopedSlots","_u","key","fn","staticClass","_v","proxy","staticRenderFns","name","components","NotificationChannelTemplate","props","type","required","component","_s","title","envVarsToSet","length","_t","configVariableName","configVariableTitle","directives","rawName","value","configVariable","expression","configVariablePlaceholder","domProps","target","composing","_e","channelCreated","showSettings","class","inactive","notificationsEnabled","_l","notificationSettings","setting","id","theme","printerStatusChangeNotifications","Array","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","description","model","callback","subcategories","subcategory","getKey","variable","isSubcategory","settingId","disabled","labelClass","settingTitle","settingDescription","bottomDivider","SavingAnimation","default","isHeader","data","computed","watch","section","propNames","propValues","methods","enabledByDefault","NotificationSettingSwitch","configUpdateTimeout","missedEnvVars","get","set","changedProps","newValues","created","updateConfig","clearTimeout","config"],"mappings":"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D,YACAyD,YAEAR,eACAjD,aACAyD,YAEAN,UACAnD,aACAyD,YAEAF,eACAvD,aACAyD,YAEAC,UACA1D,aACAyD,aAIAE,OACA,OACA/C,6DAIAgD,UACA/B,QACA,yBACA,SAGA,2BAFA,OAKAuB,aACA,+BAIAS,OACAjD,oBACA,wCACAkD,iCACAC,2BACAC,mBAKAC,SACA9E,cACA,qDCpJiY,I,wBCQ7Xe,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCnBA,GACb,CACE0B,GAAI,0BACJxB,MAAO,iBACPsC,YAAa,uCAEf,CACEd,GAAI,YACJxB,MAAO,mBACPsC,YAAa,6CACbG,cAAe,CACb,CACEjB,GAAI,uBACJxB,MAAO,qBACP8D,kBAAkB,GAEpB,CACEtC,GAAI,4BACJxB,MAAO,0BACP8D,kBAAkB,GAEpB,CACEtC,GAAI,4BACJxB,MAAO,2CACP8D,kBAAkB,GAEpB,CACEtC,GAAI,+BACJxB,MAAO,2BACPsC,YAAa,mCACbwB,kBAAkB,KAIxB,CACEtC,GAAI,0BACJxB,MAAO,uBACPsC,YAAa,yCC6GF,GACf9C,mCAEAC,YACA2D,uBACAW,6BAGApE,OACAnB,eACAoB,YACAC,aAEApB,QACAmB,YACAC,aAEAnB,qBACAkB,YACAC,aAEAyB,sBACA1B,WACAyD,eAEApC,cACArB,aACAyD,YAEAhD,qBACAT,YACAyD,YAEA1C,2BACAf,YACAyD,YAEAjD,oBACAR,YACAyD,aAIAE,OACA,OACA9C,oBACAuD,2BAIAR,UACAxC,iBACA,8CAEAI,uBACA,8CACA,8CAGAnB,eAAA,MACA,2FACA,SACA,mCACA,0BACAgE,UAGA,UAEAvC,kCACAwC,eACA,yCACA,YAEA,uCACA3C,uBACA,cACA,iBACA,8CACA,SAGA,UAEA4C,gBACA,MACA,uCACA5C,uBACA,cACA,SACA,KACA,iBACA,qBAEA6C,aACAC,YAGA,UACA,wCACAX,iCACAC,YACAC,mBAGA,CACA,uCACArC,uBACA,cACA,SACA,KACA,iBACA,6CAEA6C,aACAC,YAGA,UACA,wCACAX,iCACAC,YACAC,kBAOAnC,QACA,yBACA,SAGA,2BAFA,QAOAgC,OACAhD,oBACA,WAGA,2DACA,uBAIA6D,UAEA,sCACA,6CACA,wBAEA,yFAEA,wBAIAT,SACAlB,UAEA,+DAEA5D,cACA,mDAEAwF,eACA,0BACAC,uCAGA,SACA,+CAGA,oBACA,yCACA,oBACA,wCACAd,iCACAC,qBACAC,iBAGA,kEAEA,KACA,sBACA,oCACA,IACA,wCAAAF,iCAAAe,WACA,SCpVmY,ICQ/X,G,UAAY,eACd,EACAvG,EACAqB,GACA,EACA,KACA,WACA,OAIa,S,2CCnBf","file":"js/chunk-5226b226.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('notification-channel-template',{attrs:{\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel,\"config-variable-title\":\"User Key\",\"config-variable-placeholder\":\"Pushover User Key\",\"config-variable-name\":\"user_key\"},on:{\"createNotificationChannel\":function($event){return _vm.$emit('createNotificationChannel', $event)},\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)},\"deleteNotificationChannel\":(channel) => _vm.$emit('deleteNotificationChannel', channel),\"clearErrorMessages\":(settingKey) => _vm.$emit('clearErrorMessages', settingKey)},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('small',{staticClass:\"form-text text-muted\"},[_vm._v(\" If you have a Pushover account, you can \"),_c('a',{attrs:{\"href\":\"https://support.pushover.net/i7-what-is-pushover-and-how-do-i-use-it\",\"target\":\"_blank\"}},[_vm._v(\"get your User Key\")]),_vm._v(\" and enter it here. \")])]},proxy:true}])})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <notification-channel-template\n    :error-messages=\"errorMessages\"\n    :saving=\"saving\"\n    :notification-channel=\"notificationChannel\"\n    config-variable-title=\"User Key\"\n    config-variable-placeholder=\"Pushover User Key\"\n    config-variable-name=\"user_key\"\n    @createNotificationChannel=\"$emit('createNotificationChannel', $event)\"\n    @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n    @deleteNotificationChannel=\"(channel) => $emit('deleteNotificationChannel', channel)\"\n    @clearErrorMessages=\"(settingKey) => $emit('clearErrorMessages', settingKey)\"\n  >\n    <template #header>\n      <small class=\"form-text text-muted\">\n        If you have a Pushover account, you can\n        <a\n          href=\"https://support.pushover.net/i7-what-is-pushover-and-how-do-i-use-it\"\n          target=\"_blank\"\n          >get your User Key</a\n        >\n        and enter it here.\n      </small>\n    </template>\n  </notification-channel-template>\n</template>\n\n<script>\nimport NotificationChannelTemplate from '@src/components/user-preferences/notifications/NotificationChannelTemplate.vue'\n\nexport default {\n  name: 'PushoverPlugin',\n\n  components: {\n    NotificationChannelTemplate,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object,\n      required: true,\n    },\n    saving: {\n      type: Object,\n      required: true,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PushoverPlugin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PushoverPlugin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PushoverPlugin.vue?vue&type=template&id=bd972b44&\"\nimport script from \"./PushoverPlugin.vue?vue&type=script&lang=js&\"\nexport * from \"./PushoverPlugin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=style&index=0&id=76646857&prod&lang=sass&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('h2',{staticClass:\"section-title\"},[_vm._v(_vm._s(_vm.notificationChannel.title))]),(_vm.envVarsToSet.length === 0)?_c('div',[_vm._t(\"header\"),_vm._t(\"configuration\",function(){return [(_vm.configVariableName)?_c('div',{staticClass:\"form-group row my-4\"},[_c('label',{staticClass:\"col-12 col-form-label\",attrs:{\"for\":`id_${_vm.settingKey(_vm.configVariableName)}`}},[_vm._v(\" \"+_vm._s(_vm.configVariableTitle)+\" \")]),_c('div',{staticClass:\"col-12 col-form-label\"},[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages[_vm.settingKey('config')],\"saving\":_vm.saving[_vm.settingKey('config')]}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.configVariable),expression:\"configVariable\"}],staticClass:\"form-control\",attrs:{\"id\":`id_${_vm.settingKey(_vm.configVariableName)}`,\"type\":\"text\",\"placeholder\":_vm.configVariablePlaceholder},domProps:{\"value\":(_vm.configVariable)},on:{\"input\":function($event){if($event.target.composing)return;_vm.configVariable=$event.target.value}}})])],1)]):_vm._e()]}),(_vm.channelCreated && _vm.showSettings)?_c('div',[_c('notification-setting-switch',{attrs:{\"setting-id\":\"enabled\",\"setting-title\":\"Enable notification\",\"is-header\":true,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel,\"bottom-divider\":true},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}}),_c('div',{class:{ inactive: !_vm.notificationsEnabled }},[_vm._t(\"custom-settings\"),_vm._l((_vm.notificationSettings),function(setting){return _c('div',{key:setting.id},[(setting.id === 'print_job')?[(_vm.theme === 'web')?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-form-label\"},[_c('saving-animation',{attrs:{\"errors\":[],\"saving\":false}},[_c('div',{staticClass:\"custom-control custom-checkbox form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.printerStatusChangeNotifications),expression:\"printerStatusChangeNotifications\"}],staticClass:\"custom-control-input\",attrs:{\"id\":`id_${_vm.settingKey(setting.id)}`,\"type\":\"checkbox\",\"disabled\":!_vm.notificationsEnabled},domProps:{\"checked\":Array.isArray(_vm.printerStatusChangeNotifications)?_vm._i(_vm.printerStatusChangeNotifications,null)>-1:(_vm.printerStatusChangeNotifications)},on:{\"change\":function($event){var $$a=_vm.printerStatusChangeNotifications,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.printerStatusChangeNotifications=$$a.concat([$$v]))}else{$$i>-1&&(_vm.printerStatusChangeNotifications=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.printerStatusChangeNotifications=$$c}}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":`id_${_vm.settingKey(setting.id)}`}},[_vm._v(\" \"+_vm._s(setting.title)+\" \"),(setting.description)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(setting.description))]):_vm._e()])])])],1)]):_c('div',[_c('saving-animation',{attrs:{\"errors\":[],\"saving\":false}},[_c('div',{staticClass:\"mobile-setting-item-wrapper\"},[_c('div',{staticClass:\"setting-item-text\"},[_c('label',{attrs:{\"for\":`id_${_vm.settingKey(setting.id)}`}},[_vm._v(\" \"+_vm._s(setting.title)+\" \"),(setting.description)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(setting.description))]):_vm._e()])]),_c('div',{staticClass:\"setting-item-switch\"},[_c('onoff-toggle',{staticClass:\"mb-0\",attrs:{\"theme\":_vm.theme,\"width\":_vm.theme === 'ios' ? 48 : 30,\"height\":_vm.theme === 'ios' ? 24 : 12,\"on-color\":_vm.theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)',\"off-color\":\"var(--color-divider)\",\"border-color\":\"var(--color-divider)\",\"thumb-color\":_vm.theme === 'ios' ? '#fff' : 'var(--color-primary)',\"disabled\":!_vm.notificationsEnabled},model:{value:(_vm.printerStatusChangeNotifications),callback:function ($$v) {_vm.printerStatusChangeNotifications=$$v},expression:\"printerStatusChangeNotifications\"}})],1)])])],1)]:[_c('notification-setting-switch',{attrs:{\"setting-id\":setting.id,\"setting-title\":setting.title,\"setting-description\":setting.description,\"disabled\":!_vm.notificationsEnabled,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}})],(setting.subcategories)?_c('div',_vm._l((setting.subcategories),function(subcategory){return _c('notification-setting-switch',{key:_vm.getKey(subcategory),attrs:{\"setting-id\":subcategory.id,\"setting-title\":subcategory.title,\"setting-description\":subcategory.description,\"is-subcategory\":true,\"disabled\":!_vm.notificationsEnabled,\"error-messages\":_vm.errorMessages,\"saving\":_vm.saving,\"notification-channel\":_vm.notificationChannel},on:{\"updateNotificationChannel\":function($event){return _vm.$emit('updateNotificationChannel', $event)}}})}),1):_vm._e()],2)})],2)],1):_vm._e(),_vm._t(\"footer\")],2):_c('div',[_c('p',{staticClass:\"text-warning\"},[_vm._v(\"Please configure the following variables in the \\\".env\\\" file:\")]),_c('ul',{staticClass:\"text-warning\"},_vm._l((_vm.envVarsToSet),function(variable){return _c('li',{key:variable},[_vm._v(_vm._s(variable))])}),0)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.theme === 'web')?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-form-label\",class:{ 'pl-5': _vm.isSubcategory }},[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages ? _vm.errorMessages[_vm.settingKey(_vm.settingId)] : [],\"saving\":_vm.saving ? _vm.saving[_vm.settingKey(_vm.settingId)] : false}},[_c('div',{staticClass:\"custom-control custom-checkbox form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.value),expression:\"value\"}],staticClass:\"custom-control-input\",attrs:{\"id\":`id_${_vm.settingKey(_vm.settingId)}`,\"type\":\"checkbox\",\"disabled\":_vm.disabled},domProps:{\"checked\":Array.isArray(_vm.value)?_vm._i(_vm.value,null)>-1:(_vm.value)},on:{\"change\":function($event){var $$a=_vm.value,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.value=$$a.concat([$$v]))}else{$$i>-1&&(_vm.value=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.value=$$c}}}}),_c('label',{class:['custom-control-label', _vm.labelClass],attrs:{\"for\":`id_${_vm.settingKey(_vm.settingId)}`}},[_vm._v(\" \"+_vm._s(_vm.settingTitle)+\" \"),(_vm.settingDescription)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(_vm.settingDescription))]):_vm._e()])])])],1),(_vm.bottomDivider)?_c('div',{staticClass:\"col-12\"},[_c('hr',{staticClass:\"my-1\"})]):_vm._e()]):_c('div',[_c('saving-animation',{attrs:{\"errors\":_vm.errorMessages ? _vm.errorMessages[_vm.settingKey(_vm.settingId)] : [],\"saving\":_vm.saving ? _vm.saving[_vm.settingKey(_vm.settingId)] : false}},[_c('div',{staticClass:\"mobile-setting-item-wrapper\",class:{ 'is-subcategory': _vm.isSubcategory }},[_c('div',{staticClass:\"setting-item-text\"},[_c('label',{class:_vm.labelClass,attrs:{\"for\":`id_${_vm.settingKey(_vm.settingId)}`}},[_vm._v(\" \"+_vm._s(_vm.settingTitle)+\" \"),(_vm.settingDescription)?_c('span',{staticClass:\"text-muted setting-description\"},[_c('br'),_vm._v(_vm._s(_vm.settingDescription))]):_vm._e()])]),_c('div',{staticClass:\"setting-item-switch\"},[_c('onoff-toggle',{staticClass:\"mb-0\",attrs:{\"theme\":_vm.theme,\"width\":_vm.theme === 'ios' ? 48 : 30,\"height\":_vm.theme === 'ios' ? 24 : 12,\"on-color\":_vm.theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)',\"off-color\":\"var(--color-divider)\",\"border-color\":\"var(--color-divider)\",\"thumb-color\":_vm.theme === 'ios' ? '#fff' : 'var(--color-primary)',\"disabled\":_vm.disabled},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-if=\"theme === 'web'\" class=\"row\">\n    <div class=\"col-12 col-form-label\" :class=\"{ 'pl-5': isSubcategory }\">\n      <saving-animation\n        :errors=\"errorMessages ? errorMessages[settingKey(settingId)] : []\"\n        :saving=\"saving ? saving[settingKey(settingId)] : false\"\n      >\n        <div class=\"custom-control custom-checkbox form-check-inline\">\n          <input\n            :id=\"`id_${settingKey(settingId)}`\"\n            v-model=\"value\"\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            :disabled=\"disabled\"\n          />\n          <label :class=\"['custom-control-label', labelClass]\" :for=\"`id_${settingKey(settingId)}`\">\n            {{ settingTitle }}\n            <span v-if=\"settingDescription\" class=\"text-muted setting-description\"\n              ><br />{{ settingDescription }}</span\n            >\n          </label>\n        </div>\n      </saving-animation>\n    </div>\n    <div v-if=\"bottomDivider\" class=\"col-12\">\n      <hr class=\"my-1\" />\n    </div>\n  </div>\n  <div v-else>\n    <saving-animation\n      :errors=\"errorMessages ? errorMessages[settingKey(settingId)] : []\"\n      :saving=\"saving ? saving[settingKey(settingId)] : false\"\n    >\n      <div class=\"mobile-setting-item-wrapper\" :class=\"{ 'is-subcategory': isSubcategory }\">\n        <div class=\"setting-item-text\">\n          <label :class=\"labelClass\" :for=\"`id_${settingKey(settingId)}`\">\n            {{ settingTitle }}\n            <span v-if=\"settingDescription\" class=\"text-muted setting-description\"\n              ><br />{{ settingDescription }}</span\n            >\n          </label>\n        </div>\n        <div class=\"setting-item-switch\">\n          <onoff-toggle\n            v-model=\"value\"\n            :theme=\"theme\"\n            :width=\"theme === 'ios' ? 48 : 30\"\n            :height=\"theme === 'ios' ? 24 : 12\"\n            :on-color=\"theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)'\"\n            off-color=\"var(--color-divider)\"\n            border-color=\"var(--color-divider)\"\n            :thumb-color=\"theme === 'ios' ? '#fff' : 'var(--color-primary)'\"\n            :disabled=\"disabled\"\n            class=\"mb-0\"\n          />\n        </div>\n      </div>\n    </saving-animation>\n  </div>\n</template>\n\n<script>\nimport SavingAnimation from '@src/components/SavingAnimation.vue'\nimport { getNotificationSettingKey } from '@src/lib/utils'\nimport { mobilePlatform } from '@src/lib/page_context'\n\nexport default {\n  name: 'NotificationSettingSwitch',\n\n  components: {\n    SavingAnimation,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object || null,\n      default: null,\n    },\n    saving: {\n      type: Object || null,\n      default: null,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n    settingId: {\n      type: String,\n      required: true,\n    },\n    settingTitle: {\n      type: String,\n      required: true,\n    },\n    settingDescription: {\n      type: String,\n      default: '',\n    },\n    isSubcategory: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    bottomDivider: {\n      type: Boolean,\n      default: false,\n    },\n    isHeader: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      value: this.notificationChannel.channelInfo[this.settingId],\n    }\n  },\n\n  computed: {\n    theme() {\n      const platform = mobilePlatform()\n      if (!platform) {\n        return 'web'\n      } else {\n        return platform === 'ios' ? 'ios' : 'material'\n      }\n    },\n    labelClass() {\n      return this.isHeader ? 'lg' : ''\n    },\n  },\n\n  watch: {\n    value: function (newVal, prevVal) {\n      this.$emit('updateNotificationChannel', {\n        section: this.notificationChannel,\n        propNames: [this.settingId],\n        propValues: [newVal],\n      })\n    },\n  },\n\n  methods: {\n    settingKey(settingId) {\n      return getNotificationSettingKey(this.notificationChannel, settingId)\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n.form-check-inline\n  label\n    &.lg\n      font-size: 1.15em\n      font-weight: bolder\n.mobile-setting-item-wrapper\n  display: flex\n  align-items: center\n  gap: .5rem\n  padding: 10px 0\n  border-bottom: 1px solid var(--color-divider)\n  &.is-subcategory\n    margin-left: 1rem\n  .setting-item-text\n    flex: 1\n  .setting-item-switch\n    flex: 0 0 1\n  label\n    margin-bottom: 0\n    &.lg\n      font-size: 1.15em\n      font-weight: bolder\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationSettingSwitch.vue?vue&type=template&id=f5a0e1a8&scoped=true&\"\nimport script from \"./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationSettingSwitch.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NotificationSettingSwitch.vue?vue&type=style&index=0&id=f5a0e1a8&prod&lang=sass&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f5a0e1a8\",\n  null\n  \n)\n\nexport default component.exports","export default [\n  {\n    id: 'notify_on_failure_alert',\n    title: 'Failure alerts',\n    description: 'When possible failures are detected',\n  },\n  {\n    id: 'print_job',\n    title: 'Print job events',\n    description: 'Upon start/end/cancellation of a print job',\n    subcategories: [\n      {\n        id: 'notify_on_print_done',\n        title: 'When print is done',\n        enabledByDefault: true,\n      },\n      {\n        id: 'notify_on_print_cancelled',\n        title: 'When print is cancelled',\n        enabledByDefault: false,\n      },\n      {\n        id: 'notify_on_filament_change',\n        title: 'When filament runs out or needs a change',\n        enabledByDefault: true,\n      },\n      {\n        id: 'notify_on_other_print_events',\n        title: 'When other event happens',\n        description: 'Such as start, pause, and resume',\n        enabledByDefault: false,\n      },\n    ],\n  },\n  {\n    id: 'notify_on_heater_status',\n    title: 'Heater status change',\n    description: 'Heater reached target or cooled down',\n  },\n]\n","<template>\n  <section>\n    <h2 class=\"section-title\">{{ notificationChannel.title }}</h2>\n\n    <div v-if=\"envVarsToSet.length === 0\">\n      <slot name=\"header\"></slot>\n\n      <slot name=\"configuration\">\n        <div v-if=\"configVariableName\" class=\"form-group row my-4\">\n          <label :for=\"`id_${settingKey(configVariableName)}`\" class=\"col-12 col-form-label\">\n            {{ configVariableTitle }}\n          </label>\n          <div class=\"col-12 col-form-label\">\n            <saving-animation\n              :errors=\"errorMessages[settingKey('config')]\"\n              :saving=\"saving[settingKey('config')]\"\n            >\n              <input\n                :id=\"`id_${settingKey(configVariableName)}`\"\n                v-model=\"configVariable\"\n                type=\"text\"\n                :placeholder=\"configVariablePlaceholder\"\n                class=\"form-control\"\n              />\n            </saving-animation>\n          </div>\n        </div>\n      </slot>\n\n      <div v-if=\"channelCreated && showSettings\">\n        <notification-setting-switch\n          setting-id=\"enabled\"\n          setting-title=\"Enable notification\"\n          :is-header=\"true\"\n          :error-messages=\"errorMessages\"\n          :saving=\"saving\"\n          :notification-channel=\"notificationChannel\"\n          :bottom-divider=\"true\"\n          @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n        />\n        <div :class=\"{ inactive: !notificationsEnabled }\">\n          <slot name=\"custom-settings\"></slot>\n          <div v-for=\"setting in notificationSettings\" :key=\"setting.id\">\n            <template v-if=\"setting.id === 'print_job'\">\n              <!-- FIXME: reuse NotificationSettingSwitch -->\n              <div v-if=\"theme === 'web'\" class=\"row\">\n                <div class=\"col-12 col-form-label\">\n                  <saving-animation :errors=\"[]\" :saving=\"false\">\n                    <div class=\"custom-control custom-checkbox form-check-inline\">\n                      <input\n                        :id=\"`id_${settingKey(setting.id)}`\"\n                        v-model=\"printerStatusChangeNotifications\"\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        :disabled=\"!notificationsEnabled\"\n                      />\n                      <label class=\"custom-control-label\" :for=\"`id_${settingKey(setting.id)}`\">\n                        {{ setting.title }}\n                        <span v-if=\"setting.description\" class=\"text-muted setting-description\"\n                          ><br />{{ setting.description }}</span\n                        >\n                      </label>\n                    </div>\n                  </saving-animation>\n                </div>\n              </div>\n              <div v-else>\n                <saving-animation :errors=\"[]\" :saving=\"false\">\n                  <div class=\"mobile-setting-item-wrapper\">\n                    <div class=\"setting-item-text\">\n                      <label :for=\"`id_${settingKey(setting.id)}`\">\n                        {{ setting.title }}\n                        <span v-if=\"setting.description\" class=\"text-muted setting-description\"\n                          ><br />{{ setting.description }}</span\n                        >\n                      </label>\n                    </div>\n                    <div class=\"setting-item-switch\">\n                      <onoff-toggle\n                        v-model=\"printerStatusChangeNotifications\"\n                        :theme=\"theme\"\n                        :width=\"theme === 'ios' ? 48 : 30\"\n                        :height=\"theme === 'ios' ? 24 : 12\"\n                        :on-color=\"\n                          theme === 'ios' ? 'var(--color-primary)' : 'var(--color-primary-muted)'\n                        \"\n                        off-color=\"var(--color-divider)\"\n                        border-color=\"var(--color-divider)\"\n                        :thumb-color=\"theme === 'ios' ? '#fff' : 'var(--color-primary)'\"\n                        :disabled=\"!notificationsEnabled\"\n                        class=\"mb-0\"\n                      />\n                    </div>\n                  </div>\n                </saving-animation>\n              </div>\n            </template>\n            <template v-else>\n              <notification-setting-switch\n                :setting-id=\"setting.id\"\n                :setting-title=\"setting.title\"\n                :setting-description=\"setting.description\"\n                :disabled=\"!notificationsEnabled\"\n                :error-messages=\"errorMessages\"\n                :saving=\"saving\"\n                :notification-channel=\"notificationChannel\"\n                @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n              />\n            </template>\n            <div v-if=\"setting.subcategories\">\n              <notification-setting-switch\n                v-for=\"subcategory in setting.subcategories\"\n                :key=\"getKey(subcategory)\"\n                :setting-id=\"subcategory.id\"\n                :setting-title=\"subcategory.title\"\n                :setting-description=\"subcategory.description\"\n                :is-subcategory=\"true\"\n                :disabled=\"!notificationsEnabled\"\n                :error-messages=\"errorMessages\"\n                :saving=\"saving\"\n                :notification-channel=\"notificationChannel\"\n                @updateNotificationChannel=\"$emit('updateNotificationChannel', $event)\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <slot name=\"footer\"></slot>\n    </div>\n    <div v-else>\n      <p class=\"text-warning\">Please configure the following variables in the \".env\" file:</p>\n      <ul class=\"text-warning\">\n        <li v-for=\"variable in envVarsToSet\" :key=\"variable\">{{ variable }}</li>\n      </ul>\n    </div>\n  </section>\n</template>\n\n<script>\nimport SavingAnimation from '@src/components/SavingAnimation.vue'\nimport NotificationSettingSwitch from '@src/components/user-preferences/notifications/NotificationSettingSwitch.vue'\nimport { getNotificationSettingKey } from '@src/lib/utils'\nimport defaultNotificationSettings from '@config/user-preferences/notification-settings'\nimport { mobilePlatform } from '@src/lib/page_context'\n\nexport default {\n  name: 'NotificationChannelTemplate',\n\n  components: {\n    SavingAnimation,\n    NotificationSettingSwitch,\n  },\n\n  props: {\n    errorMessages: {\n      type: Object,\n      required: true,\n    },\n    saving: {\n      type: Object,\n      required: true,\n    },\n    notificationChannel: {\n      type: Object,\n      required: true,\n    },\n    notificationSettings: {\n      type: Array,\n      default: () => defaultNotificationSettings,\n    },\n    showSettings: {\n      type: Boolean,\n      default: true,\n    },\n    configVariableTitle: {\n      type: String,\n      default: '',\n    },\n    configVariablePlaceholder: {\n      type: String,\n      default: '',\n    },\n    configVariableName: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      configVariable: null,\n      configUpdateTimeout: null,\n    }\n  },\n\n  computed: {\n    channelCreated() {\n      return !!this.notificationChannel.channelInfo\n    },\n    notificationsEnabled() {\n      return this.notificationChannel.channelInfo\n        ? this.notificationChannel.channelInfo.enabled\n        : false\n    },\n    envVarsToSet() {\n      const envVars = this.notificationChannel.pluginInfo?.env_vars || {}\n      let missedEnvVars = []\n      for (const [key, val] of Object.entries(envVars)) {\n        if (val.is_required && !val.is_set) {\n          missedEnvVars.push(key)\n        }\n      }\n      return missedEnvVars\n    },\n    printerStatusChangeNotifications: {\n      get: function () {\n        if (!this.notificationChannel.channelInfo) {\n          return null\n        }\n        const subcategories = this.notificationSettings.find(\n          (setting) => setting.id === 'print_job'\n        ).subcategories\n        for (const subcategory of subcategories) {\n          if (this.notificationChannel.channelInfo[subcategory.id]) {\n            return true\n          }\n        }\n        return false\n      },\n      set: function (newValue) {\n        if (newValue) {\n          const subcategories = this.notificationSettings.find(\n            (setting) => setting.id === 'print_job'\n          ).subcategories\n          let changedProps = []\n          let newValues = []\n          for (const subcategory of subcategories) {\n            if (subcategory.enabledByDefault) {\n              // this.notificationChannel.channelInfo[subcategory.id] = true\n              changedProps.push(subcategory.id)\n              newValues.push(true)\n            }\n          }\n          if (changedProps.length) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: changedProps,\n              propValues: newValues,\n            })\n          }\n        } else {\n          const subcategories = this.notificationSettings.find(\n            (setting) => setting.id === 'print_job'\n          ).subcategories\n          let changedProps = []\n          let newValues = []\n          for (const subcategory of subcategories) {\n            if (this.notificationChannel.channelInfo[subcategory.id]) {\n              // this.notificationChannel.channelInfo[subcategory.id] = false\n              changedProps.push(subcategory.id)\n              newValues.push(false)\n            }\n          }\n          if (changedProps.length) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: changedProps,\n              propValues: newValues,\n            })\n          }\n        }\n      },\n    },\n    // FIXME: remove after NotificationSettingSwitch reuse\n    theme() {\n      const platform = mobilePlatform()\n      if (!platform) {\n        return 'web'\n      } else {\n        return platform === 'ios' ? 'ios' : 'material'\n      }\n    },\n  },\n\n  watch: {\n    configVariable(newValue, oldValue) {\n      if (oldValue === null) {\n        return\n      }\n      this.$emit('clearErrorMessages', this.settingKey('config'))\n      this.updateConfig()\n    },\n  },\n\n  created() {\n    if (\n      this.notificationChannel.channelInfo &&\n      this.notificationChannel.channelInfo.config &&\n      this.configVariableName\n    ) {\n      this.configVariable = this.notificationChannel.channelInfo.config[this.configVariableName]\n    } else {\n      this.configVariable = ''\n    }\n  },\n\n  methods: {\n    getKey(setting) {\n      // update key on setting value change to force re-render\n      return `${setting.id}_${this.notificationChannel.channelInfo[setting.id]}`\n    },\n    settingKey(settingId) {\n      return getNotificationSettingKey(this.notificationChannel, settingId)\n    },\n    updateConfig() {\n      if (this.configUpdateTimeout) {\n        clearTimeout(this.configUpdateTimeout)\n      }\n\n      const config = {\n        [this.configVariableName]: this.configVariable,\n      }\n\n      if (this.channelCreated) {\n        this.configUpdateTimeout = setTimeout(() => {\n          if (this.configVariable) {\n            this.$emit('updateNotificationChannel', {\n              section: this.notificationChannel,\n              propNames: ['config'],\n              propValues: [config],\n            })\n          } else {\n            this.$emit('deleteNotificationChannel', this.notificationChannel)\n          }\n        }, 1000)\n      } else if (this.configVariable) {\n        this.configUpdateTimeout = setTimeout(\n          () =>\n            this.$emit('createNotificationChannel', { section: this.notificationChannel, config }),\n          1000\n        )\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n\n// FIXME: remove after NotificationSettingSwitch reuse\n.setting-description\n  font-size: 14px\n  margin-bottom: 0\n.mobile-setting-item-wrapper\n  display: flex\n  align-items: center\n  gap: .5rem\n  padding: 10px 0\n  border-bottom: 1px solid var(--color-divider)\n  &.is-subcategory\n    margin-left: 1rem\n  .setting-item-text\n    flex: 1\n  .setting-item-switch\n    flex: 0 0 1\n  label\n    margin-bottom: 0\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationChannelTemplate.vue?vue&type=template&id=76646857&scoped=true&\"\nimport script from \"./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationChannelTemplate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NotificationChannelTemplate.vue?vue&type=style&index=0&id=76646857&prod&lang=sass&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76646857\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationSettingSwitch.vue?vue&type=style&index=0&id=f5a0e1a8&prod&lang=sass&scoped=true&\""],"sourceRoot":""}