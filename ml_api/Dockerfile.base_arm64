# Jetson-specific since we don't have a use case on ARM oustide Jetson (maybe Mac? But who uses Mac for Obico server?)

# This will not use cuDNN because no headers included
# should be compatible with Jetpack 4xx
FROM nvcr.io/nvidia/l4t-tensorrt:r8.0.1-runtime as darknet_builder_jetson
ENV DEBIAN_FRONTEND=noninteractive
# hadolint ignore=DL3008,DL3015
RUN apt-get update \
  && apt-get install -y \
    build-essential \
    ca-certificates \
    cmake \
    g++ \
    gcc \
    git \
    wget
WORKDIR /
ENV LIBRARY_PATH="${LIBRARY_PATH}:/usr/local/cuda/targets/aarch64-linux/lib:/usr/local/cuda/targets/aarch64-linux/lib/stubs"

# Lock darknet version for reproducibility
# compile CPU and GPU version
# hadolint ignore=DL3003
RUN git clone https://github.com/AlexeyAB/darknet --depth 1 \
  && cd darknet \
  && git fetch origin 59c86222c5387bffd9108a21885f80e980ece234 \
  && sed -i 's/LIBSO=0/LIBSO=1/' Makefile \
  && make -j "$(nproc)" && mv libdarknet.so libdarknet_cpu.so \
  && sed -i 's/GPU=0/GPU=1/' Makefile \
  && sed -i 's/lcudart/lcudart_static -ldl -lrt/' Makefile \
  && make -j "$(nproc)" && mv libdarknet.so libdarknet_gpu.so \
  && rm -rf .git .circleci .github

  # these options do not work in 8.0.1 unfortunately
  # && sed -i 's/CUDNN=0/CUDNN=1/' Makefile \
  # && sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile \
  # && sed -i 's/CUDNN=1/CUDNN=0/' Makefile \
  # && sed -i 's/CUDNN_HALF=1/CUDNN_HALF=0/' Makefile \

# Output image will not have darknet compilation layers to make it smaller
FROM nvcr.io/nvidia/l4t-tensorrt:r8.0.1-runtime as ml_api_base_jetson

COPY --from=darknet_builder_jetson /darknet /darknet

WORKDIR /
# hadolint ignore=DL3003
RUN wget \
  --progress=dot:giga \
  https://nvidia.box.com/shared/static/2sv2fv1wseihaw8ym0d4srz41dzljwxh.whl \
  -O onnxruntime_gpu-1.11.0-cp38-none-any.whl \
  && pip3 install --no-cache-dir \
    onnxruntime_gpu-1.11.0-cp38-none-any.whl

# Some hacks to make darknet see cuda libraries. May fail easily
# this is only needed for Jetpack 4x and will not be needed for Jetpack 5
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/targets/aarch64-linux/lib"
# https://elinux.org/Jetson_Zoo#ONNX_Runtime
# May be unsafe to use such files, Todo: recompile onnx runtime

WORKDIR /app
# hadolint ignore=DL3008
RUN apt-get update && apt-get install --no-install-recommends -y \
  ca-certificates \
  python3-pip \
    wget \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
  
RUN pip install --no-cache-dir --upgrade pip==23.3.2

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 3333

ARG GIT_SOURCE
ARG GIT_COMMIT
LABEL org.opencontainers.image.source="${GIT_SOURCE}"
LABEL org.opencontainers.image.revision="${GIT_COMMIT}"
